{"version":3,"file":"static/js/936.f08f4d47.chunk.js","mappings":"kPAEaA,EAAOC,EAAAA,GAAAA,KAAH,uFAMJC,EAAKD,EAAAA,GAAAA,GAAH,oEAKFE,EAAKF,EAAAA,GAAAA,GAAH,2C,kHCVFG,EAAOH,EAAAA,GAAAA,KAAH,6IASJI,EAAQJ,EAAAA,GAAAA,MAAH,+CAKLK,EAAQL,EAAAA,GAAAA,MAAH,uJASLM,EAASN,EAAAA,GAAAA,OAAH,qS,6CC4CnB,EA7De,WAAO,IAAD,EACnB,GAAwCO,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GACnD,GAAmCC,EAAAA,EAAAA,UAAS,IAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACU,KAAdP,IAGJI,EAAc,IACdE,GAAa,IAEbE,EAAAA,EAAAA,IAAaR,GAAWS,MAAK,SAAAC,GACtBA,EAAKC,QAAQC,QAIlBR,EAAcM,EAAKC,SACnBL,GAAa,IAJXA,GAAa,EAKhB,IACF,GAAE,CAACN,IASJ,OACE,6BACE,UAACP,EAAD,CAAMoB,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAaF,EAAEG,OACrBlB,EAAgB,CAAEC,UAAWgB,EAAWE,SAASlB,UAAUmB,QAC3DH,EAAWI,OACZ,EAIG,WACE,SAAC1B,EAAD,CAAO2B,QAAQ,eAAf,8CACA,SAAC1B,EAAD,CACE2B,KAAK,OACLC,GAAG,YACHC,KAAK,YACLC,YAAY,uIAEd,SAAC7B,EAAD,CAAQ0B,KAAK,SAAb,gDAEF,0BACGnB,EAAUuB,KAAI,SAAAC,GACb,OACE,SAAC,EAAAnC,GAAD,WACE,SAAC,KAAD,CAAMoC,GAAE,kBAAaD,EAAMJ,IAA3B,SACGI,EAAME,gBAAkBF,EAAMH,QAF1BG,EAAMJ,GAMlB,IACAlB,IAAa,SAACyB,EAAA,EAAD,SAIrB,C,+LC/DKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,mCAAG,oGACFD,EAAAA,EAAAA,IAAA,qCAAwCD,IADtC,cACnBG,EADmB,yBAElBA,EAASxB,MAFS,2CAAH,qDAKXF,EAAY,mCAAG,WAAM2B,GAAN,uFACHH,EAAAA,EAAAA,IAAA,+BACGD,EADH,iCACmCI,EADnC,gCADG,cACpBD,EADoB,yBAInBA,EAASxB,MAJU,2CAAH,sDAOZ0B,EAAe,mCAAG,WAAMb,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,oBACEQ,EADF,oBADM,cACvBG,EADuB,yBAItBA,EAASxB,MAJa,2CAAH,sDAOf2B,EAAe,mCAAG,WAAMd,GAAN,uFACNS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,oBADM,cACvBG,EADuB,yBAItBA,EAASxB,MAJa,2CAAH,sDAOf4B,EAAc,mCAAG,WAAMf,GAAN,uFACLS,EAAAA,EAAAA,IAAA,gBACZT,EADY,4BACUQ,EADV,2BADK,cACtBG,EADsB,yBAIrBA,EAASxB,MAJY,2CAAH,qD","sources":["Pages/Home/Home.styked.js","Pages/Movies/movies.styled.js","Pages/Movies/Movies.jsx","components/Services/Services.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n`;\n\nexport const H1 = styled.h1`\n  font-size: 32px;\n  margin-bottom: 20px;\n`;\n\nexport const Li = styled.li`\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\n/* Стилі для форми */\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 500px;\n`;\n/* Стилі для label */\nexport const Label = styled.label`\n  margin-right: 10px;\n`;\n/* Стилі для інпуту */\n\nexport const Input = styled.input`\n  margin-right: 12px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  font-size: 16px;\n  width: 100%;\n`;\n\nexport const Button = styled.button`\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 10px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  :hover {\n    background-color: #3e8e41;\n  }\n`;\n","import { Link, useSearchParams } from 'react-router-dom';\nimport { Label, Form, Input, Button } from './movies.styled';\nimport { useState } from 'react';\nimport { searchMovies } from 'components/Services/Services';\nimport { useEffect } from 'react';\nimport { Li } from 'Pages/Home/Home.styked';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [movieList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(true);\n        return;\n      }\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.target;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n\n  return (\n    <main>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"search-input\">Пошук:</Label>\n        <Input\n          type=\"text\"\n          id=\"movieName\"\n          name=\"movieName\"\n          placeholder=\"Введіть фільм для пошуку\"\n        />\n        <Button type=\"submit\">Пошук</Button>\n      </Form>\n      <ul>\n        {movieList.map(movie => {\n          return (\n            <Li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>\n                {movie.original_title || movie.name}\n              </Link>\n            </Li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </ul>\n    </main>\n  );\n};\nMovies.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '2634ebd1e012827785177b9737b602d5';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const qetMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const qetMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const qetMovieReview = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["Main","styled","H1","Li","Form","Label","Input","Button","useSearchParams","searchParams","setSearchParams","movieName","get","useState","movieList","setMoviesList","isLoading","setIsLoading","useEffect","searchMovies","then","data","results","length","onSubmit","e","preventDefault","searchForm","target","elements","value","reset","htmlFor","type","id","name","placeholder","map","movie","to","original_title","Loader","API_KEY","axios","getTrending","response","query","qetMovieDetails","qetMovieCredits","qetMovieReview"],"sourceRoot":""}